version: '3.8'

services:
  # PostgreSQL API 服务
  postgres-api:
    image: swr.cn-east-3.myhuaweicloud.com/btc8_public/tech-support-api:v3
    container_name: tech-support-api
    restart: unless-stopped
    environment:
      - NODE_ENV=${NODE_ENV}
      - DB_HOST=${POSTGRES_HOST}
      - DB_PORT=${POSTGRES_PORT}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=${POSTGRES_DB}
      - PORT=${API_PORT}
      - POSTGRES_API_PORT=${API_PORT}
      - DATABASE_URL=${DATABASE_URL}
    ports:
      - "3001:3001"
    networks:
      - tech-support-network
    healthcheck:
      test: ["CMD", "node", "-e", "const http = require('http'); const req = http.request({hostname: 'localhost', port: 3001, path: '/health'}, (res) => process.exit(res.statusCode === 200 ? 0 : 1)); req.on('error', () => process.exit(1)); req.end();"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 前端应用
  frontend:
    image: swr.cn-east-3.myhuaweicloud.com/btc8_public/tech-support-ui:v3.2
    container_name: tech-support-ui
    restart: unless-stopped
    ports:
      - "3002:80"
    depends_on:
      postgres-api:
        condition: service_healthy
    networks:
      - tech-support-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  tech-support-network:
    driver: bridge